{
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux":"azure",
   "osx":"azure",
   "win":"azure"
  }
 },
 "feedstock_name":"xrt",
 "hash_type":"sha256",
 "linux_64_meta_yaml":{
  "about":{
   "description":"Package xrt (XRayTracer) is a python software library for ray tracing and\nwave propagation in x-ray regime. It is primarily meant for modeling\nsynchrotron sources, beamlines and beamline elements. Includes a GUI for\ncreating a beamline and interactively viewing it in 3D.\n",
   "dev_url":"https://github.com/kklmn/xrt",
   "doc_url":"https://xrt.readthedocs.io",
   "home":"https://xrt.readthedocs.io",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"Ray tracing and wave propagation in x-ray regime"
  },
  "build":{
   "entry_points":[
    "xrt = xrt.gui.xrtQookStart:main"
   ],
   "number":"1",
   "script":" -m pip install . --no-deps -vv"
  },
  "package":{
   "name":"xrt",
   "version":"1.3.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip"
   ],
   "run":[
    "python",
    "matplotlib",
    "numpy",
    "pyqt",
    "scipy",
    "sphinx"
   ]
  },
  "source":{
   "patches":[
    "entry-points.patch"
   ],
   "sha256":"1360ca34a20aa8a1ee9b8bcdf9f4539f06955d1d0c535a539887143b102a4e39",
   "url":"https://pypi.io/packages/source/x/xrt/xrt-1.3.3.zip"
  },
  "test":{
   "commands":[
    "which xrt"
   ],
   "imports":[
    "xrt",
    "xrt.backends",
    "xrt.backends.raycing",
    "xrt.gui",
    "xrt.gui.commons",
    "xrt.gui.xrtGlow",
    "xrt.gui.xrtQook"
   ]
  }
 },
 "linux_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "matplotlib",
    "numpy",
    "pyqt",
    "python",
    "scipy",
    "sphinx"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "meta_yaml":{
  "about":{
   "description":"Package xrt (XRayTracer) is a python software library for ray tracing and\nwave propagation in x-ray regime. It is primarily meant for modeling\nsynchrotron sources, beamlines and beamline elements. Includes a GUI for\ncreating a beamline and interactively viewing it in 3D.\n",
   "dev_url":"https://github.com/kklmn/xrt",
   "doc_url":"https://xrt.readthedocs.io",
   "home":"https://xrt.readthedocs.io",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"Ray tracing and wave propagation in x-ray regime"
  },
  "build":{
   "entry_points":[
    "xrt = xrt.gui.xrtQookStart:main",
    "xrt = xrt.gui.xrtQookStart:main",
    "xrt = xrt.gui.xrtQookStart:main"
   ],
   "number":"1",
   "script":" -m pip install . --no-deps -vv"
  },
  "package":{
   "name":"xrt",
   "version":"1.3.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "matplotlib",
    "numpy",
    "pyqt",
    "scipy",
    "sphinx",
    "python",
    "matplotlib",
    "numpy",
    "pyqt",
    "scipy",
    "sphinx",
    "python",
    "matplotlib",
    "numpy",
    "pyqt",
    "scipy",
    "sphinx"
   ]
  },
  "source":{
   "patches":[
    "entry-points.patch",
    "entry-points.patch",
    "entry-points.patch"
   ],
   "sha256":"1360ca34a20aa8a1ee9b8bcdf9f4539f06955d1d0c535a539887143b102a4e39",
   "url":"https://pypi.io/packages/source/x/xrt/xrt-1.3.3.zip"
  },
  "test":{
   "commands":[
    "where xrt",
    "which xrt",
    "which xrt"
   ],
   "imports":[
    "xrt",
    "xrt.backends",
    "xrt.backends.raycing",
    "xrt.gui",
    "xrt.gui.commons",
    "xrt.gui.xrtGlow",
    "xrt.gui.xrtQook",
    "xrt",
    "xrt.backends",
    "xrt.backends.raycing",
    "xrt.gui",
    "xrt.gui.commons",
    "xrt.gui.xrtGlow",
    "xrt.gui.xrtQook",
    "xrt",
    "xrt.backends",
    "xrt.backends.raycing",
    "xrt.gui",
    "xrt.gui.commons",
    "xrt.gui.xrtGlow",
    "xrt.gui.xrtQook"
   ]
  }
 },
 "name":"xrt",
 "osx_64_meta_yaml":{
  "about":{
   "description":"Package xrt (XRayTracer) is a python software library for ray tracing and\nwave propagation in x-ray regime. It is primarily meant for modeling\nsynchrotron sources, beamlines and beamline elements. Includes a GUI for\ncreating a beamline and interactively viewing it in 3D.\n",
   "dev_url":"https://github.com/kklmn/xrt",
   "doc_url":"https://xrt.readthedocs.io",
   "home":"https://xrt.readthedocs.io",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"Ray tracing and wave propagation in x-ray regime"
  },
  "build":{
   "entry_points":[
    "xrt = xrt.gui.xrtQookStart:main"
   ],
   "number":"1",
   "script":" -m pip install . --no-deps -vv"
  },
  "package":{
   "name":"xrt",
   "version":"1.3.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip"
   ],
   "run":[
    "python",
    "matplotlib",
    "numpy",
    "pyqt",
    "scipy",
    "sphinx"
   ]
  },
  "source":{
   "patches":[
    "entry-points.patch"
   ],
   "sha256":"1360ca34a20aa8a1ee9b8bcdf9f4539f06955d1d0c535a539887143b102a4e39",
   "url":"https://pypi.io/packages/source/x/xrt/xrt-1.3.3.zip"
  },
  "test":{
   "commands":[
    "which xrt"
   ],
   "imports":[
    "xrt",
    "xrt.backends",
    "xrt.backends.raycing",
    "xrt.gui",
    "xrt.gui.commons",
    "xrt.gui.xrtGlow",
    "xrt.gui.xrtQook"
   ]
  }
 },
 "osx_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "matplotlib",
    "numpy",
    "pyqt",
    "python",
    "scipy",
    "sphinx"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "raw_meta_yaml":"{% set name = \"xrt\" %}\n{% set version = \"1.3.3\" %}\n{% set file_ext = \"zip\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"1360ca34a20aa8a1ee9b8bcdf9f4539f06955d1d0c535a539887143b102a4e39\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}\n  {{ hash_type }}: {{ hash_value }}\n  # TODO: remove the patch after https://github.com/kklmn/xrt/pull/42 is accepted/merged/released.\n  patches:\n    - entry-points.patch\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n  skip: True  # [py<36]\n  entry_points:\n    - {{ name }} = {{ name }}.gui.xrtQookStart:main\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - matplotlib\n    - numpy\n    - pyqt\n    - scipy\n    - sphinx\n    # - pyopencl  - Not sure if we need this (optional runtime dep)\n\ntest:\n  imports:\n    - xrt\n    - xrt.backends\n    - xrt.backends.raycing \n    - xrt.gui\n    - xrt.gui.commons\n    - xrt.gui.xrtGlow\n    - xrt.gui.xrtQook\n  commands:\n    - which xrt  # [not win]\n    - where xrt  # [win]\n\nabout:\n  home: https://xrt.readthedocs.io\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Ray tracing and wave propagation in x-ray regime'\n  description: |\n    Package xrt (XRayTracer) is a python software library for ray tracing and\n    wave propagation in x-ray regime. It is primarily meant for modeling\n    synchrotron sources, beamlines and beamline elements. Includes a GUI for\n    creating a beamline and interactively viewing it in 3D.\n  doc_url: https://xrt.readthedocs.io\n  dev_url: https://github.com/kklmn/xrt\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "matplotlib",
   "numpy",
   "pip",
   "pyqt",
   "python",
   "scipy",
   "sphinx"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "matplotlib",
    "numpy",
    "pyqt",
    "python",
    "scipy",
    "sphinx"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "matplotlib",
    "numpy",
    "pyqt",
    "python",
    "scipy",
    "sphinx"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/x/xrt/xrt-1.3.3.zip",
 "version":"1.3.3",
 "win_64_meta_yaml":{
  "about":{
   "description":"Package xrt (XRayTracer) is a python software library for ray tracing and\nwave propagation in x-ray regime. It is primarily meant for modeling\nsynchrotron sources, beamlines and beamline elements. Includes a GUI for\ncreating a beamline and interactively viewing it in 3D.\n",
   "dev_url":"https://github.com/kklmn/xrt",
   "doc_url":"https://xrt.readthedocs.io",
   "home":"https://xrt.readthedocs.io",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"Ray tracing and wave propagation in x-ray regime"
  },
  "build":{
   "entry_points":[
    "xrt = xrt.gui.xrtQookStart:main"
   ],
   "number":"1",
   "script":" -m pip install . --no-deps -vv"
  },
  "package":{
   "name":"xrt",
   "version":"1.3.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip"
   ],
   "run":[
    "python",
    "matplotlib",
    "numpy",
    "pyqt",
    "scipy",
    "sphinx"
   ]
  },
  "source":{
   "patches":[
    "entry-points.patch"
   ],
   "sha256":"1360ca34a20aa8a1ee9b8bcdf9f4539f06955d1d0c535a539887143b102a4e39",
   "url":"https://pypi.io/packages/source/x/xrt/xrt-1.3.3.zip"
  },
  "test":{
   "commands":[
    "where xrt"
   ],
   "imports":[
    "xrt",
    "xrt.backends",
    "xrt.backends.raycing",
    "xrt.gui",
    "xrt.gui.commons",
    "xrt.gui.xrtGlow",
    "xrt.gui.xrtQook"
   ]
  }
 },
 "win_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "matplotlib",
    "numpy",
    "pyqt",
    "python",
    "scipy",
    "sphinx"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 }
}