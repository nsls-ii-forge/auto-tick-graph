{
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux":"azure",
   "osx":"azure",
   "win":"azure"
  }
 },
 "feedstock_name":"periodictable",
 "hash_type":"sha256",
 "linux_64_meta_yaml":{
  "about":{
   "description":"The periodictable package provides an extensible periodic table\nof the elements prepopulated with data important to neutron and\nX-ray scattering experiments. With the elements pacakge you can\ncompute the scattering potential of a compound at a given wavelength.\n",
   "dev_url":"https://github.com/pkienzle/periodictable",
   "doc_url":"http://www.reflectometry.org/danse/docs/elements/",
   "home":"http://www.reflectometry.org/danse/elements.html",
   "license":"Public domain",
   "license_file":"LICENSE.txt",
   "summary":"Extensible periodic table for python"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . --no-deps -vv"
  },
  "package":{
   "name":"periodictable",
   "version":"1.5.2"
  },
  "requirements":{
   "host":[
    "pip",
    "python"
   ],
   "run":[
    "python",
    "numpy",
    "pyparsing"
   ]
  },
  "source":{
   "sha256":"1fea8abf0c20453550630ca682a75f0148f65b6d21fdcce7cf0c0e98631fa0d3",
   "url":"https://pypi.io/packages/source/p/periodictable/periodictable-1.5.2.tar.gz"
  },
  "test":{
   "imports":[
    "periodictable",
    "periodictable.density"
   ]
  }
 },
 "linux_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "meta_yaml":{
  "about":{
   "description":"The periodictable package provides an extensible periodic table\nof the elements prepopulated with data important to neutron and\nX-ray scattering experiments. With the elements pacakge you can\ncompute the scattering potential of a compound at a given wavelength.\n",
   "dev_url":"https://github.com/pkienzle/periodictable",
   "doc_url":"http://www.reflectometry.org/danse/docs/elements/",
   "home":"http://www.reflectometry.org/danse/elements.html",
   "license":"Public domain",
   "license_file":"LICENSE.txt",
   "summary":"Extensible periodic table for python"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . --no-deps -vv"
  },
  "package":{
   "name":"periodictable",
   "version":"1.5.2"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run":[
    "python",
    "numpy",
    "pyparsing",
    "python",
    "numpy",
    "pyparsing",
    "python",
    "numpy",
    "pyparsing"
   ]
  },
  "source":{
   "sha256":"1fea8abf0c20453550630ca682a75f0148f65b6d21fdcce7cf0c0e98631fa0d3",
   "url":"https://pypi.io/packages/source/p/periodictable/periodictable-1.5.2.tar.gz"
  },
  "test":{
   "imports":[
    "periodictable",
    "periodictable.density",
    "periodictable",
    "periodictable.density",
    "periodictable",
    "periodictable.density"
   ]
  }
 },
 "name":"periodictable",
 "new_version":"1.5.3",
 "new_version_attempts":{
  "1.5.3":415
 },
 "new_version_errors":{},
 "osx_64_meta_yaml":{
  "about":{
   "description":"The periodictable package provides an extensible periodic table\nof the elements prepopulated with data important to neutron and\nX-ray scattering experiments. With the elements pacakge you can\ncompute the scattering potential of a compound at a given wavelength.\n",
   "dev_url":"https://github.com/pkienzle/periodictable",
   "doc_url":"http://www.reflectometry.org/danse/docs/elements/",
   "home":"http://www.reflectometry.org/danse/elements.html",
   "license":"Public domain",
   "license_file":"LICENSE.txt",
   "summary":"Extensible periodic table for python"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . --no-deps -vv"
  },
  "package":{
   "name":"periodictable",
   "version":"1.5.2"
  },
  "requirements":{
   "host":[
    "pip",
    "python"
   ],
   "run":[
    "python",
    "numpy",
    "pyparsing"
   ]
  },
  "source":{
   "sha256":"1fea8abf0c20453550630ca682a75f0148f65b6d21fdcce7cf0c0e98631fa0d3",
   "url":"https://pypi.io/packages/source/p/periodictable/periodictable-1.5.2.tar.gz"
  },
  "test":{
   "imports":[
    "periodictable",
    "periodictable.density"
   ]
  }
 },
 "osx_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "raw_meta_yaml":"{% set name = \"periodictable\" %}\n{% set version = \"1.5.2\" %}\n{% set sha256 = \"1fea8abf0c20453550630ca682a75f0148f65b6d21fdcce7cf0c0e98631fa0d3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - python\n    - numpy\n    - pyparsing\n\ntest:\n  imports:\n    - periodictable\n    - periodictable.density\n\nabout:\n  home: http://www.reflectometry.org/danse/elements.html\n  license: Public domain\n  license_file: LICENSE.txt\n  summary: Extensible periodic table for python\n  description: |\n    The periodictable package provides an extensible periodic table\n    of the elements prepopulated with data important to neutron and\n    X-ray scattering experiments. With the elements pacakge you can\n    compute the scattering potential of a compound at a given wavelength.\n  doc_url: http://www.reflectometry.org/danse/docs/elements/\n  dev_url: https://github.com/pkienzle/periodictable\n",
 "req":{
  "__set__":true,
  "elements":[
   "numpy",
   "pip",
   "pyparsing",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/p/periodictable/periodictable-1.5.2.tar.gz",
 "version":"1.5.2",
 "win_64_meta_yaml":{
  "about":{
   "description":"The periodictable package provides an extensible periodic table\nof the elements prepopulated with data important to neutron and\nX-ray scattering experiments. With the elements pacakge you can\ncompute the scattering potential of a compound at a given wavelength.\n",
   "dev_url":"https://github.com/pkienzle/periodictable",
   "doc_url":"http://www.reflectometry.org/danse/docs/elements/",
   "home":"http://www.reflectometry.org/danse/elements.html",
   "license":"Public domain",
   "license_file":"LICENSE.txt",
   "summary":"Extensible periodic table for python"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . --no-deps -vv"
  },
  "package":{
   "name":"periodictable",
   "version":"1.5.2"
  },
  "requirements":{
   "host":[
    "pip",
    "python"
   ],
   "run":[
    "python",
    "numpy",
    "pyparsing"
   ]
  },
  "source":{
   "sha256":"1fea8abf0c20453550630ca682a75f0148f65b6d21fdcce7cf0c0e98631fa0d3",
   "url":"https://pypi.io/packages/source/p/periodictable/periodictable-1.5.2.tar.gz"
  },
  "test":{
   "imports":[
    "periodictable",
    "periodictable.density"
   ]
  }
 },
 "win_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 }
}